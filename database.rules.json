{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "events": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$eventId": {
        ".read": "auth != null",
        ".write": "auth != null && (!data.exists() || data.child('ownerUid').val() === auth.uid)",
        ".validate": "newData.hasChildren(['name', 'startAt', 'endAt', 'ownerUid', 'maxGroupSize'])",
        "name": { ".validate": "newData.isString() && newData.val().length > 0" },
        "description": { ".validate": "newData.isString()" },
        "startAt": { ".validate": "newData.isNumber()" },
        "endAt": { ".validate": "newData.isNumber()" },
        "rewardInfo": { ".validate": "newData.isString()" },
        "notifyMessage": { ".validate": "newData.isString()" },
        "color": { ".validate": "newData.isString()" },
        "maxGroupSize": { ".validate": "newData.isNumber() && newData.val() >= 2 && newData.val() <= 8" },
        "ownerUid": { ".validate": "newData.isString() && newData.val() === auth.uid" },
        "isEnded": { ".validate": "newData.isBoolean()" },
        "endedAt": { ".validate": "newData.isNumber() || !newData.exists()" },
        "participants": {
          ".read": "auth != null",
          "$participantId": {
            ".read": "auth != null",
            ".write": "auth != null",
            ".validate": "newData.hasChildren(['joinedAt'])",
            "joinedAt": { ".validate": "newData.isNumber()" },
            "characterId": { ".validate": "newData.isString() || !newData.exists()" },
            "groupId": { ".validate": "newData.isString() || !newData.exists()" },
            "message": { ".validate": "newData.isString() || !newData.exists()" },
            "messageUpdatedAt": { ".validate": "newData.isNumber() || !newData.exists()" },
            "rewardGiven": { ".validate": "newData.isBoolean() || !newData.exists()" },
            "rewardNote": { ".validate": "newData.isString() || !newData.exists()" }
          }
        }
      }
    },
    "parties": {
      ".read": true,
      "$partyId": {
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['nest', 'maxMember', 'leader'])",
        "members": {
          ".write": "auth != null && (!data.exists() || !data.child(newData.child('userId').val()).exists())",
          "$memberId": {
            ".validate": "newData.hasChildren(['userId', 'joinedAt']) && newData.child('userId').val() === auth.uid && newData.child('joinedAt').isString()",
            "userId": {
              ".validate": "newData.val() === auth.uid"
            },
            "joinedAt": {
              ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*Z$/)"
            }
          }
        },
        "goals": {
          ".write": "auth != null && root.child('parties').child($partyId).child('leader').val() === auth.uid",
          ".validate": "newData.hasChildren(['atk', 'hp', 'cri', 'def'])",
          "atk": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "hp": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "cri": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "def": { ".validate": "newData.isNumber() && newData.val() >= 0" }
        },
        "leader": {
          ".validate": "auth != null && (!data.exists() || data.val() === auth.uid)"
        },
        "maxMember": {
          ".validate": "newData.isNumber() && newData.val() > 0 && newData.val() <= 8"
        },
        "nest": {
          ".validate": "newData.isString() && newData.val().length > 0"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "auth != null",
        ".write": "auth.uid === $uid || root.child('guild/leaders/' + auth.uid).val() === true",
        "characters": {
          ".read": "auth != null",
          ".write": "auth.uid === $uid || root.child('guild/leaders/' + auth.uid).val() === true",
          "$characterId": {
            ".validate": "newData.hasChildren(['name', 'class', 'mainClass', 'stats']) && (newData.child('lastResetDay').isNumber() || !newData.child('lastResetDay').exists()) && (newData.child('lastResetWeek').isNumber() || !newData.child('lastResetWeek').exists())",
            "name": { ".validate": "newData.isString() && newData.val().length > 0" },
            "class": { ".validate": "newData.isString()" },
            "mainClass": { ".validate": "newData.isString()" },
            "level": { ".validate": "newData.isNumber() && newData.val() >= 1" },
            "stats": {
              "atk": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "hp": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "pdef": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "mdef": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "cri": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "ele": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "fd": { ".validate": "newData.isNumber() && newData.val() >= 0" }
            },
            "checklist": {
              "daily": {
                "dailyQuest": { ".validate": "newData.isBoolean()" },
                "ftg": { ".validate": "newData.isBoolean()" }
              },
              "weekly": {
                "$task": { ".validate": "newData.isNumber() && newData.val() >= 0" }
              }
            }
          }
        },
        "meta": {
          ".read": "auth != null",
          ".write": "auth.uid === $uid || root.child('guild/leaders/' + auth.uid).val() === true",
          "discord": { ".validate": "newData.isString()" }
        }
      }
    },
    "tradeMerchants": {
      "$uid": {
        ".read": "auth != null",
        ".write": "auth.uid === $uid || root.child('guild/leaders/' + auth.uid).val() === true"
      }
    },
    "trade": {
      "$tradeId": {
        ".read": "auth != null",
        ".write": "auth != null"
      }
    },
    "tradeItems": {
      "$itemId": {
        ".read": "auth != null",
        ".write": "auth != null"
      }
    },
    "guildLoans": {
      "$loanId": {
        ".read": "auth != null",
        ".write": "auth != null && (data.child('borrower').child('uid').val() == auth.uid || root.child('guild/leaders/' + auth.uid).val() === true)"
      }
    },
    "feed": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "guild": {
      ".read": "auth != null",
      ".write": "root.child('guild/leaders/' + auth.uid).val() === true",
      "leaders": {
        ".read": "auth != null",
        ".write": "root.child('guild/leaders/' + auth.uid).val() === true"
      },
      "members": {
        ".read": "auth != null",
        "$memberId": {
          ".write": "auth.uid === $memberId || root.child('guild/leaders/' + auth.uid).val() === true"
        }
      },
      "announcements": {
        ".read": "auth != null",
        ".write": "root.child('guild/leaders/' + auth.uid).val() === true"
      },
      "events": {
        ".read": "auth != null",
        ".write": "root.child('guild/leaders/' + auth.uid).val() === true"
      }
    },
    "searchingParties": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$characterId": {
        ".validate": "newData.hasChildren(['characterId', 'characterName', 'characterClass', 'message', 'nests', 'stats', 'updatedAt'])",
        "characterId": { ".validate": "newData.isString() && newData.val().length > 0" },
        "characterName": { ".validate": "newData.isString() && newData.val().length > 0" },
        "characterClass": { ".validate": "newData.isString() && newData.val().length > 0" },
        "message": { ".validate": "newData.isString()" },
        "nests": { ".validate": "newData.isString()" },
        "stats": {
          ".validate": "newData.hasChildren(['atk', 'hp', 'pdef', 'mdef', 'cri', 'ele', 'fd'])",
          "atk": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "hp": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "pdef": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "mdef": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "cri": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "ele": { ".validate": "newData.isNumber() && newData.val() >= 0" },
          "fd": { ".validate": "newData.isNumber() && newData.val() >= 0" }
        },
        "updatedAt": { ".validate": "newData.isString()" }
      }
    },
    "splitBills": {
      "$billId": {
        ".read": "auth != null && data.child('participants').child(auth.uid).exists()",
        ".write": "auth != null && (!data.exists() || data.child('ownerUid').val() === auth.uid)",
        ".validate": "newData.hasChildren(['title', 'serviceFee', 'ownerUid', 'createdAt', 'expiresAt', 'participants', 'items'])",
        "title": { ".validate": "newData.isString() && newData.val().length > 0" },
        "serviceFee": { ".validate": "newData.isNumber() && newData.val() >= 0" },
        "ownerUid": { ".validate": "newData.isString() && newData.val() === auth.uid" },
        "createdAt": { ".validate": "newData.isNumber()" },
        "expiresAt": { ".validate": "newData.isNumber()" },
        "participants": {
          "$participantId": {
            ".validate": "newData.hasChildren(['name', 'characterId'])",
            "name": { ".validate": "newData.isString() && newData.val().length > 0" },
            "characterId": { ".validate": "newData.isString() && newData.val().length > 0" }
          }
        },
        "items": {
          "$itemId": {
            ".validate": "newData.hasChildren(['name', 'price'])",
            "name": { ".validate": "newData.isString() && newData.val().length > 0" },
            "price": { ".validate": "newData.isNumber() && newData.val() >= 0" }
          }
        }
      }
    }
  }
}
